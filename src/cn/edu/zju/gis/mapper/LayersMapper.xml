<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.gis.mapper.LayersMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.gis.po.Layers" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="layername" property="layername" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="storelocation" property="storelocation" jdbcType="VARCHAR" />
    <result column="accessibility" property="accessibility" jdbcType="BIT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="datacontent" property="datacontent" jdbcType="VARCHAR" />
    <result column="appendDataSrc" property="appendDataSrc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, layername, userid, storelocation, accessibility, type, datacontent ,appenddatasrc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.gis.po.LayersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from layers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from layers
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from layers
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.gis.po.LayersExample" >
    delete from layers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.gis.po.Layers" >
    insert into layers (id, layername, userid, 
      storelocation, accessibility, type, 
      datacontent, appendDataSrc)
    values (#{id,jdbcType=INTEGER}, #{layername,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{storelocation,jdbcType=VARCHAR}, #{accessibility,jdbcType=BIT}, #{type,jdbcType=INTEGER}, 
      #{datacontent,jdbcType=VARCHAR},#{appendDataSrc,jdbcType=VARCHAR})
  </insert>
  <insert id="myinsert" parameterType="cn.edu.zju.gis.po.Layers" useGeneratedKeys="true" keyProperty="id" >
  insert into layers (layername, userid, 
      storelocation, accessibility, type, 
      datacontent,appendDataSrc)
    values (#{layername,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{storelocation,jdbcType=VARCHAR}, #{accessibility,jdbcType=BIT}, #{type,jdbcType=INTEGER}, 
      #{datacontent,jdbcType=VARCHAR},#{appendDataSrc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.gis.po.Layers" >
    insert into layers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="layername != null" >
        layername,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="storelocation != null" >
        storelocation,
      </if>
      <if test="accessibility != null" >
        accessibility,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="datacontent != null" >
        datacontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="layername != null" >
        #{layername,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="storelocation != null" >
        #{storelocation,jdbcType=VARCHAR},
      </if>
      <if test="accessibility != null" >
        #{accessibility,jdbcType=BIT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="datacontent != null" >
        #{datacontent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.gis.po.LayersExample" resultType="java.lang.Integer" >
    select count(*) from layers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update layers
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.layername != null" >
        layername = #{record.layername,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.storelocation != null" >
        storelocation = #{record.storelocation,jdbcType=VARCHAR},
      </if>
      <if test="record.accessibility != null" >
        accessibility = #{record.accessibility,jdbcType=BIT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.datacontent != null" >
        datacontent = #{record.datacontent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update layers
    set id = #{record.id,jdbcType=INTEGER},
      layername = #{record.layername,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      storelocation = #{record.storelocation,jdbcType=VARCHAR},
      accessibility = #{record.accessibility,jdbcType=BIT},
      type = #{record.type,jdbcType=INTEGER},
      datacontent = #{record.datacontent,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.gis.po.Layers" >
    update layers
    <set >
      <if test="layername != null" >
        layername = #{layername,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="storelocation != null" >
        storelocation = #{storelocation,jdbcType=VARCHAR},
      </if>
      <if test="accessibility != null" >
        accessibility = #{accessibility,jdbcType=BIT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="datacontent != null" >
        datacontent = #{datacontent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.gis.po.Layers" >
    update layers
    set layername = #{layername,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      storelocation = #{storelocation,jdbcType=VARCHAR},
      accessibility = #{accessibility,jdbcType=BIT},
      type = #{type,jdbcType=INTEGER},
      datacontent = #{datacontent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>